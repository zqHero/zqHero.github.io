(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{486:function(t,e,s){t.exports=s.p+"assets/img/001.f3a3b3cf.png"},487:function(t,e,s){t.exports=s.p+"assets/img/002.8fad6641.png"},488:function(t,e,s){t.exports=s.p+"assets/img/003.3810540d.png"},489:function(t,e,s){t.exports=s.p+"assets/img/004.32477f3e.png"},531:function(t,e,s){"use strict";s.r(e);var o=s(55),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"hugo-github个人博客搭建"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hugo-github个人博客搭建"}},[t._v("#")]),t._v(" HuGo+github个人博客搭建")]),t._v(" "),o("h2",{attrs:{id:"_01-前言"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_01-前言"}},[t._v("#")]),t._v(" &01.前言")]),t._v(" "),o("p",[t._v("前言：看过许多的博客，也看过许多个人博客搭建教程，但大多数教程如行云流水，讲解简单（也许这本身就是一个很简单的工程）。多数的搭建方式以及使用工具也各不相同，直到自己看到了一篇比较酷炫和牛逼的个人博客后（牛人地址：http://blog.coderzh.com/），我决定要使用Hugo语言和git来搭建个人博客，从开始搭建到搭建完成，我都会写博客记录下来，供大家参考学习：")]),t._v(" "),o("h2",{attrs:{id:"_02-hugo语言介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_02-hugo语言介绍"}},[t._v("#")]),t._v(" &02.Hugo语言介绍")]),t._v(" "),o("p",[t._v("Hugo语言官方中文文档地址："),o("a",{attrs:{href:"http://www.gohugo.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.gohugo.org/"),o("OutboundLink")],1)]),t._v(" "),o("p",[t._v("Hugo官方主页："),o("a",{attrs:{href:"https://gohugo.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gohugo.io/"),o("OutboundLink")],1)]),t._v(" "),o("p",[t._v("Hugo是一个用Go语言编写的静态网站生成器，它使用起来非常简单，相对于Jekyll复杂的安装设置来说，Hugo仅需要一个二进制文件hugo(hugo.exe)即可轻松用于本地调试和生成静态页面。Hugo生成静态页面的效率很高，我的260多篇博客文章生成几乎是瞬间完成的，而之前用Jekyll需要等待10秒左右。Hugo自带watch的调试模式，可以在我修改MarkDown文章之后切换到浏览器，页面会检测到更新并且自动刷新，呈现出最终效果，能极大的提高博客书写效率。再加上Hugo是使用Go语言编写，已经没有任何理由不使用Hugo来代替Jekyll作为我的个人博客站点生成器了。")]),t._v(" "),o("p",[t._v("//注意 需要下载下来 使用 （请自行配置cmd hugo命令）")]),t._v(" "),o("p",[t._v("Hugo二进制下载地址："),o("a",{attrs:{href:"https://github.com/spf13/hugo/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spf13/hugo/releases"),o("OutboundLink")],1)]),t._v(" "),o("h2",{attrs:{id:"_03-创建一个hugo项目"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_03-创建一个hugo项目"}},[t._v("#")]),t._v(" &03.创建一个hugo项目")]),t._v(" "),o("p",[t._v("下载下来后，只有一个叫hugo或者hugo.exe的程序，接下来开始生成自己的站点：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ hugo new site mysite\n")])])]),o("p",[t._v("然后hugo会自动生成这样一个目录结构：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("▸ archetypes/\n\n▸ content/\n\n▸ layouts/\n\n▸ static/\n\nconfig.toml\n")])])]),o("p",[t._v("简要介绍一下，config.toml是网站的配置文件，这是一个TOML文件，全称是Tom’s Obvious, Minimal Language，这是它的作者GitHub联合创始人Tom Preston-Werner 觉得YAML不够优雅，捣鼓出来的一个新格式。如果你不喜欢这种格式，你可以将config.toml替换为YAML格式的config.yaml，或者json格式的config.json。hugo都支持。")]),t._v(" "),o("p",[t._v("content目录里放的是你写的markdown文章，layouts目录里放的是网站的模板文件，static目录里放的是一些图片、css、js等资源。")]),t._v(" "),o("p",[t._v("进入生成的site目录：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ cd mysite\n")])])]),o("p",[t._v("创建一个页面：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ hugo new about.md\n")])])]),o("p",[t._v("如果是博客日志，最好将md文件放在content的post目录里。")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ hugo new post/first.md\n")])])]),o("p",[t._v("执行完后，会在content/post目录自动生成一个MarkDown格式的first.md文件。")]),t._v(" "),o("p",[t._v("下载 所有主题：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ git clone --recursive https://github.com/spf13/hugoThemes themes\n")])])]),o("p",[t._v("我尝试过，也失败过，且从未成功一次性将所有的模板下载下来。所以，我们还是老老实实只下载其中一个模板来看看效果吧：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ cd themes\n\n$ git clone https://github.com/spf13/hyde.git\n")])])]),o("p",[t._v("启动本地调试：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("$ hugo server --theme=hyde --buildDrafts --watch\n")])])]),o("p",[t._v("浏览器里打开：http://127.0.0.1:1313\n效果如图：")]),t._v(" "),o("p",[o("img",{attrs:{src:s(486),alt:"001"}})]),t._v(" "),o("p",[t._v("–watch或者-w 选项打开的话，将会监控到文章的改动从而自动去刷新浏览器，不需要自己手工去刷新浏览器，非常方便。")]),t._v(" "),o("p",[t._v("如果你看了上面的说明已经有冲动去试一试Hugo了，我的目的也算达到了，接下来你需要的只是查看官方的说明文档就够了，所以具体的一些设置我就不重复了。")]),t._v(" "),o("p",[t._v("官方文档：https://gohugo.io/overview/introduction/")]),t._v(" "),o("p",[t._v("皮肤列表：https://github.com/spf13/hugoThemes")]),t._v(" "),o("p",[t._v("遇到的问题:")]),t._v(" "),o("p",[t._v("默认的ServerSide的代码着色会有问题，有些字的颜色会和背景色一样导致看不见。\n解决方法：使用ClientSide的代码着色方案即可解决。（见：Client-side Syntax Highlighting）\nURL全部被转成了小写，如果是旧博客迁移过来，将是无法接受的。")]),t._v(" "),o("p",[t._v("解决方法：")]),t._v(" "),o("p",[t._v("我是直接改了Hugo的代码，将URL强制转换为小写那段逻辑去掉了，之后考虑在config里提供配置开关，然后给Hugo提一个PR。如果是Windows用户可以直接https://github.com/coderzh/ConvertToHugo 下载到我修改后的版本myhugo.exe。\nUpdate(2015-09-03): 已经提交PR并commit到Hugo，最新版本只需要在config里增加：\ndisablePathToLower: true")]),t._v(" "),o("p",[t._v("文章的内容里不能像Jekyll一样可以内嵌代码模板了。最终会生成哪些页面，有一套相对固定而复杂的规则，你会发现想创建一个自定义界面会非常的困难。\n解决方法：无，看文档，了解它的规则。博客程序一般也不需要特别的自定义界面。Hugo本身已经支持了类似posts, tags, categories等内容聚合的页面，同时支持rss.xml，404.html等。")]),t._v(" "),o("p",[t._v("如果你的博客程序复杂到需要其他的页面，好好想想是否必须吧。\n如何将rss.xml替换为feed.xml？")]),t._v(" "),o("p",[t._v("解决方法：在config.yaml里加入： rssuri: “feed.xml”")]),t._v(" "),o("h2",{attrs:{id:"_04-生成文件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_04-生成文件"}},[t._v("#")]),t._v(" &04.生成文件")]),t._v(" "),o("p",[t._v("上章我们开启hugo服务器使用命令访问 localhost:1313 端口可以访问到我们生成的项目界面：")]),t._v(" "),o("p",[t._v("开启服务：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v("hugo server --theme=hugo-nuo --buildDrafts --watch\n")])])]),o("p",[t._v("访问：")]),t._v(" "),o("p",[o("img",{attrs:{src:s(487),alt:"002"}})]),t._v(" "),o("p",[t._v("确认无误，关闭服务，生成public文件：")]),t._v(" "),o("p",[t._v("进入项目根目录：")]),t._v(" "),o("p",[t._v("执行命令：")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('// baseurl 需要修改为  自己的page地址    hugo-nuo  为我当前使用的 hugo主题。\nhugo --theme=hugo-nuo --buildDrafts --baseUrl="https://zqHero.github.io/"\n\nC:\\Users\\22945\\Desktop\\zqblogSite>hugo --theme=hugo-nuo --buildDrafts --baseUrl="https://zqHero.github.io/"\n?[?25lBuilding sites … ERROR 2018/04/15 16:34:09 Unable to locate template for shortcode "gallery" in page "post\\\\getting-sta\nrted.md"\n?[K25h\n| EN\n+------------------+----+\nPages            | 32\nPaginator pages  |  0\nNon-page files   |  0\nStatic files     | 26\nProcessed images |  0\nAliases          |  9\nSitemaps         |  1\nCleaned          |  0\n\nTotal in 155 ms\n')])])]),o("h2",{attrs:{id:"_05-部署到github仓库"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_05-部署到github仓库"}},[t._v("#")]),t._v(" &05.部署到github仓库")]),t._v(" "),o("p",[t._v("进入public 文件中：")]),t._v(" "),o("p",[t._v("git add.")]),t._v(" "),o("p",[t._v("git commit -origin masters")]),t._v(" "),o("p",[o("img",{attrs:{src:s(488),alt:"003"}})]),t._v(" "),o("p",[t._v("访问 我们的 github 主页： "),o("a",{attrs:{href:"https://zqhero.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zqhero.github.io/"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("img",{attrs:{src:s(489),alt:"004"}})])])}),[],!1,null,null,null);e.default=a.exports}}]);